# Elasticsearch plugin descriptor file
# This file must exist as 'plugin-descriptor.elasticsearch.plugin.util.properties' in a folder named `elasticsearch`
# inside all plugins.
#
### example plugin for "foo"
#
# foo.zip <-- zip file for the plugin, with this structure:
#|____elasticsearch/
#| |____   <arbitrary name1>.jar <-- classes, resources, dependencies
#| |____   <arbitrary nameN>.jar <-- any number of jars
#| |____   plugin-descriptor.elasticsearch.plugin.util.properties <-- example contents below:
#
#
### mandatory elements for all plugins:
#
# 'description': simple summary of the plugin
description=source level score script
#
# 'version': plugin's version
version=1.0
#
# 'name': the plugin name
name=source-level-score-script
#
# 'classname': the name of the class to load, fully-qualified.
classname=elasticsearch.plugin.level.SourceLevelNativeScript
#
# 'java.version': version of java the code is built against
# use the system property java.specification.version
# version string must be a sequence of nonnegative decimal integers
# separated by "."'s and may have leading zeros
java.version=1.8
#
# 'elasticsearch.version': version of elasticsearch compiled against
elasticsearch.version=5.6.0
### optional elements for plugins:
#
# 'has.native.controller': whether or not the plugin has a native controller
#has.native.controller=${hasNativeController}
#
# 'requires.keystore': whether or not the plugin needs the elasticsearch keystore be created
#requires.keystore=${requiresKeystore}
